/*****************************************************************************
 *
 *  PROJECT:     Multi Theft Auto v1.0
 *  LICENSE:     See LICENSE in the top level directory
 *  FILE:        sdk/core/CLocalizationInterface.h
 *  PURPOSE:     Localization/translation interface
 *
 *  Multi Theft Auto is available from https://www.multitheftauto.com/
 *
 *****************************************************************************/

#pragma once

#ifdef _
#undef _
#endif

#define _        g_pLocalization->Translate
#define _tc      g_pLocalization->TranslateWithContext
#define _tn      g_pLocalization->TranslatePlural
#define _tcn     g_pLocalization->TranslatePluralWithContext
#define _td      // Dummy translation tag for compile-time use only.  Translation templates are generated by this, but no source code interaction

class CLanguage;

class CLocalizationInterface
{
public:
    virtual SString Translate(const SString& strMessage) = 0;
    virtual SString TranslateWithContext(const SString& strContext, const SString& strMessage) = 0;
    virtual SString TranslatePlural(const SString& strSingular, const SString& strPlural, int iNum) = 0;
    virtual SString TranslatePluralWithContext(const SString& strContext, const SString& strSingular, const SString& strPlural, int iNum) = 0;

    virtual std::vector<SString> GetAvailableLocales() = 0;
    virtual bool                 IsLocalized() = 0;
    virtual SString              GetLanguageDirectory(CLanguage* pLanguage = nullptr) = 0;
    virtual SString              GetLanguageCode() = 0;
    virtual SString              GetLanguageName() = 0;
};
